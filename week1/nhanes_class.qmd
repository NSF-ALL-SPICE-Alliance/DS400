---
title: "NHANES Challenge"
format: html
editor: visual
---

### Load Libraries

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(tidyverse)
library(haven)
library(here)
library(ggplot2)
library(janitor)
library(scales)
```

### Read-in Datasets for this Analysis:

-   DR1TOT_J.xpt as 'diet_behavior'
-   2017-2018_Hg-Blood.XPT as 'blood_hg'
-   2017-2018_Hg-Urine.XPT as 'urine_hg'
-   2017-2018_Diabetes.XPT as 'diabetes'

```{r}
diet_behavior <- read_xpt(here("data/nhanes_data/DR1TOT_J.XPT"))
blood_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Blood.XPT"))
urine_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Urine.XPT"))
diabetes <- read_xpt(here("data/nhanes_data/2017-2018_Diabetes.XPT"))
demographics <- read_xpt(here("data/nhanes_data/2017-2018_Demographics.XPT"))
```

### Subset Read-in Datasets

Subset 'diet_behavior' as 'diet'

```{r}
diet <- select(diet_behavior, SEQN, DRD360, DRD370B, DRD370BQ, DRD370Q, DRD370QQ)
```

Subset 'diabetes' as 'tiid'

```{r}
tiid <- select(diabetes, SEQN, DIQ010, DIQ170)
```

Subset 'blood_hg' as 'bhg'

```{r}
bhg <- select(blood_hg, SEQN, LBXIHG, LBDIHGSI, LBXBGE, LBXBGM)
```

Subset "urine_hg' as 'uhg'

```{r}
uhg <- select(urine_hg, SEQN, URXUHG)
```

### Merge Subsets Into A Working Dataframe as 'df'

```{r}
df <- list(diet, tiid, bhg, uhg)

df <- df %>% reduce(full_join, by = 'SEQN')
```

1.  Filter Dataframe df for the following:

```{r}
# Assuming your dataframe is named `nhanes_data`
df <- df %>%
  # Filter out rows where DIQ010 or DRD360 are NA
  filter(!is.na(DIQ010), !is.na(DRD370B)) %>%
  # Keep only rows where DIQ010 and DRD360 are 1 or 2
  filter(DIQ010 %in% c(1, 2), DRD370B %in% c(1, 2)) %>%
  # Recode 1 to "Yes" and 2 to "No" for DIQ010 and DRD360
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    DRD370B = ifelse(DRD370B == 1, "Consumes Ahi", "No Ahi")
  )
  
```

2.  Do some exploratory data analysis

diabetes

```{r}
df %>%
  ggplot(aes(x = DIQ010, fill = DRD370B )) +
  geom_bar()

```

2.  

    3.  Determine the prior probability that someone has diabetes (DIQ010)

    -   P(B)

```{r}
df %>% 
  tabyl(DIQ010)
```

```{r}
prior_prob_someone_has_diabetes <- 0.13
```

2.  

    4.  Determine the prior probability that someone eats tuna (DRD370B)

    -   P(A)

```{r}
df %>% 
  tabyl(DRD370B)
```

```{r}
prior_prob_someone_eaten_ahi <- 0.36
```

2.  

    5.  Determine the likelihood of eating tuna and having diabetes

    -   L(B\|A) = P(A\|B)

```{r}
df %>% 
  tabyl(DRD370B, DIQ010) %>% 
  adorn_percentages("col")
```

```{r}
likelihood_has_diabetes_eats_ahi <- 0.36
```

2.  

    6.  Determine posterior probability via bayes theorem

    -   P(B\|A)

```{r}
(prior_prob_someone_has_diabetes * likelihood_has_diabetes_eats_ahi)/ prior_prob_someone_eaten_ahi
```

2.  

    7.  What other questions can we ask of this data?

#### Bayes Theorem

$$
P(B \mid A) = \frac{P(B) L(B \mid A)}{P(A)} 
$$

B \<- Has Diabetes

A \<- Consumes Ahi

#### 

### Challenge

Determine the posterior probability that someone has diabetes given they are over the age of 40. Age is in the demographics dataframe, you will have to join it with the tiid data.

P(B\|A) = P(B)L(B\|A)/P(A)

P(B) = Has diabetes

L(B\|A) = Likelihood has diabetes if over 40

P(A) = Over age of 40

```{r}
diabetes_age_df <- demographics %>% 
  select(SEQN, RIDAGEYR)
  
new_tiid <- left_join(tiid, diabetes_age_df, by = "SEQN")

new_tiid
```

```{r}
new_tiid <- new_tiid %>% 
  # get rid of nan values
  filter(!is.na(DIQ010)) %>% 
  # show only row with 1 or 2 as diabetes column values
  filter(DIQ010 %in% c(1,2)) %>% 
  # change all 1 & 2 to yes and no to diabetes
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes")
  )


  
```

```{r}
new_tiid %>% 
  tabyl(DIQ010)
```

```{r}
prior_prob_someone_has_diabetes <- 0.10
# P(B)
```

```{r}
new_tiid <- new_tiid %>% 
  mutate(
    age_group = ifelse(RIDAGEYR > 40, "41+", "<=40")
  )
new_tiid
```

```{r}
new_tiid %>% 
  tabyl(age_group)
```

```{r}
prior_prob_someone_over_40 <- 0.42
#P(A)
```

```{r}

```

```{r}
new_tiid %>% 
  tabyl(DIQ010, age_group) %>% 
  adorn_percentages('col')
```

```{r}
likelihood_has_diabetes_if_40_over <- 0.23
```

```{r}
posterior_prob_has_diabetes_given_40_over <- (prior_prob_someone_has_diabetes * likelihood_has_diabetes_if_40_over)/prior_prob_someone_over_40

posterior_prob_has_diabetes_given_40_over
```

P(B\|A) = 0.05/5%
